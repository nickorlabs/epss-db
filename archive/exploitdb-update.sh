#!/bin/bash
set -e

# Start the database container (if not already running)
docker-compose up -d db

# Run the Python ExploitDB update script using the importer container
docker-compose run --rm importer python exploitdb_update.py

echo "=== ExploitDB Update Completed ==="
do
  # Extract CVE-ID from description if available
  cve_ids=$(echo "$description" | grep -oE 'CVE-[0-9]{4}-[0-9]{4,}' | sort -u)

  # Clean up and sanitize fields for SQL: remove newlines, carriage returns, double quotes, and backslashes, then escape single quotes
  file=$(echo "$file" | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\')
  esc_title=$(echo "$description" | cut -c1-100 | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\' | sed "s/'/''/g")
  esc_description=$(echo "$description" | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\' | sed "s/'/''/g")
  esc_author=$(echo "$author" | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\' | sed "s/'/''/g")
  esc_platform=$(echo "$platform" | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\' | sed "s/'/''/g")
  esc_file=$(echo "$file" | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\' | sed "s/'/''/g")
  esc_type=$(echo "$type" | tr -d '\n' | tr -d '\r' | sed 's/"//g' | tr -d '\\' | sed "s/'/''/g")

  url="https://www.exploit-db.com/exploits/$id"

  if [ -z "$cve_ids" ]; then
    cve_id="NOCVE-$id"
    echo "Adding $cve_id from ExploitDB (ID: $id) [NO CVE]"
    echo "INSERT INTO exploit_metadata (exploit_id, meta_key, meta_value) SELECT id, 'author', '$esc_author' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1 ON DUPLICATE KEY UPDATE meta_value=VALUES(meta_value);" >> "$SQL_BULK"
    echo "INSERT INTO exploit_metadata (exploit_id, meta_key, meta_value) SELECT id, 'platform', '$esc_platform' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1 ON DUPLICATE KEY UPDATE meta_value=VALUES(meta_value);" >> "$SQL_BULK"
    echo "INSERT INTO exploit_metadata (exploit_id, meta_key, meta_value) SELECT id, 'file_path', '$esc_file' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1 ON DUPLICATE KEY UPDATE meta_value=VALUES(meta_value);" >> "$SQL_BULK"
    echo "INSERT IGNORE INTO exploit_tags (exploit_id, tag) SELECT id, '$esc_type' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1;" >> "$SQL_BULK"
    echo "INSERT IGNORE INTO exploit_tags (exploit_id, tag) SELECT id, '$esc_platform' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1;" >> "$SQL_BULK"
  else
    for cve_id in $cve_ids; do
      echo "Adding $cve_id from ExploitDB (ID: $id)"
      echo "INSERT INTO exploit_metadata (exploit_id, meta_key, meta_value) SELECT id, 'author', '$esc_author' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1 ON DUPLICATE KEY UPDATE meta_value=VALUES(meta_value);" >> "$SQL_BULK"
      echo "INSERT INTO exploit_metadata (exploit_id, meta_key, meta_value) SELECT id, 'platform', '$esc_platform' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1 ON DUPLICATE KEY UPDATE meta_value=VALUES(meta_value);" >> "$SQL_BULK"
      echo "INSERT INTO exploit_metadata (exploit_id, meta_key, meta_value) SELECT id, 'file_path', '$esc_file' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1 ON DUPLICATE KEY UPDATE meta_value=VALUES(meta_value);" >> "$SQL_BULK"
      echo "INSERT IGNORE INTO exploit_tags (exploit_id, tag) SELECT id, '$esc_type' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1;" >> "$SQL_BULK"
      echo "INSERT IGNORE INTO exploit_tags (exploit_id, tag) SELECT id, '$esc_platform' FROM exploits WHERE cve_id='$cve_id' AND source='source_edb' AND source_id='$id' LIMIT 1;" >> "$SQL_BULK"
    done
  fi
done
echo "COMMIT;" >> "$SQL_BULK"

# Execute the bulk SQL file and capture output
SQL_OUTPUT=$(mysql --defaults-file="$MYSQL_CONFIG" -D epssdb --force < "$SQL_BULK" 2>&1)

# Count attempted inserts
TOTAL_META=$(grep -c "INSERT INTO exploit_metadata " "$SQL_BULK")
TOTAL_TAGS=$(grep -c "INSERT INTO exploit_tags " "$SQL_BULK")

# Count errors and successes
ERROR_COUNT=$(echo "$SQL_OUTPUT" | grep -c "^ERROR")
SUCCESS_COUNT=$((TOTAL_META + TOTAL_TAGS - ERROR_COUNT))

# Print summary
printf '\n=== Import Summary (Metadata) ===\n'
echo "Metadata attempted: $TOTAL_META"
echo "Tags attempted: $TOTAL_TAGS"
echo "Total attempted: $((TOTAL_META + TOTAL_TAGS))"
echo "Errors: $ERROR_COUNT"
echo "Likely successful: $SUCCESS_COUNT"

if [ "$ERROR_COUNT" -gt 0 ]; then
  echo "\nSome errors were encountered during import. See below:"
  echo "$SQL_OUTPUT" | grep "^ERROR" | head -20
  echo "... (showing first 20 errors only)"
fi

# Add searchsploit integration as an alternative method
echo "Checking for searchsploit availability..."
if command -v searchsploit >/dev/null 2>&1; then
  echo "Using searchsploit to ensure database is up-to-date..."
  searchsploit --update >/dev/null 2>&1 || echo "Warning: searchsploit update failed"
  echo "searchsploit integration available for direct CVE queries"
else
  echo "Note: searchsploit not installed. Using only direct ExploitDB data."
fi

echo "=== ExploitDB Update Completed ==="
